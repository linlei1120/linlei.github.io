import{_ as t,c as a,a2 as r,o}from"./chunks/framework.Cy5ZJKdt.js";const m=JSON.parse('{"title":"JavaScript面试题集","description":"","frontmatter":{},"headers":[],"relativePath":"interview/js-skill.md","filePath":"interview/js-skill.md"}'),n={name:"interview/js-skill.md"};function l(s,e,i,d,p,c){return o(),a("div",null,e[0]||(e[0]=[r('<h1 id="javascript面试题集" tabindex="-1">JavaScript面试题集 <a class="header-anchor" href="#javascript面试题集" aria-label="Permalink to &quot;JavaScript面试题集&quot;">​</a></h1><p>JavaScript是一种动态的编程语言，广泛应用于网页开发中，主要用于增强网页的交互性和动态性。</p><h2 id="_1、原生js如何添加、删除、移动、复制、创建和查找节点" tabindex="-1">1、原生JS如何添加、删除、移动、复制、创建和查找节点？ <a class="header-anchor" href="#_1、原生js如何添加、删除、移动、复制、创建和查找节点" aria-label="Permalink to &quot;1、原生JS如何添加、删除、移动、复制、创建和查找节点？&quot;">​</a></h2><p><strong>（1）添加创建</strong>：document.createElement() <strong>（2）删除</strong>：document.parentNode.removeChild() <strong>（3）移动</strong>：targetNode.appendChild(nodeToMove) <strong>（3）复制</strong>：nodeToCopy.cloneNode(true) <strong>（3）查找</strong>：document.getElementById()、getElementsByClassName()、querySelector()、querySelectorAll()、getElementsByTagName()</p><h2 id="_1、call-apply-bind的区别" tabindex="-1">1、Call\\Apply\\Bind的区别 <a class="header-anchor" href="#_1、call-apply-bind的区别" aria-label="Permalink to &quot;1、Call\\Apply\\Bind的区别&quot;">​</a></h2><p><strong>（1）相同点</strong>：都可以用于改变this的指向，传入的第一个参数都是绑定this的指向，若第一个参数是null或undefined，则会把全局对象window作为this的值；</p><p><strong>（2）不同点</strong>：<br> ① Call传入的是参数列表，但只能一次传入，而Apply传入的是数组，Bind传入的也是参数列表，但是可以多次传入； ② Bind返回的是一个改变this指向的函数，便于稍后调用，而Call和Apply会立即调用； ③ Call和Apply适用于需要立即执行函数并改变上下文的场景；Bind适用需要创建一个新的函数，可以预先设定部分参数以便后续调用；</p><h2 id="more" tabindex="-1">More <a class="header-anchor" href="#more" aria-label="Permalink to &quot;More&quot;">​</a></h2><p>Check out the documentation for the <a href="https://vitepress.dev/guide/markdown" target="_blank" rel="noreferrer">full list of markdown extensions</a>.</p>',9)]))}const u=t(n,[["render",l]]);export{m as __pageData,u as default};
